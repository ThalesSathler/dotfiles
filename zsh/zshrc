
export EDITOR=vim
export TERM="xterm-256color"
export PYENV_ROOT=$HOME/.pyenv
export PATH=$PYENV_ROOT/bin:$PATH

# Antigen init
source $(dirname ${ZDOTDIR}/.zshrc)/antigen/antigen.zsh
# Load the oh-my-zsh's library.
antigen use oh-my-zsh

#POWERLEVEL9K_MODE='nerdfont-complete'
POWERLEVEL9K_INSTALLATION_PATH=$ANTIGEN_BUNDLES/bhilburn/powerlevel9k

POWERLEVEL9K_PROMPT_ON_NEWLINE=true
POWERLEVEL9K_PROMPT_ADD_NEWLINE=true
POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX=""
POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX="\uF054 "
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(custom_archlogo ssh context dir_writable dir vcs)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status command_execution_time virtualenv custom_wifi_ssid custom_eth_info battery)
POWERLEVEL9K_CONTEXT_TEMPLATE="%n"

POWERLEVEL9K_COMMAND_EXECUTION_TIME_PRECISION=1

POWERLEVEL9K_SSH_ICON=$' \uF041'
POWERLEVEL9K_BATTERY_ICON=$'\uF011'
POWERLEVEL9K_EXECUTION_TIME_ICON=$'\uF017'
POWERLEVEL9K_HOME_ICON=$'\uF015'
POWERLEVEL9K_HOME_SUB_ICON=$'\uF015'
POWERLEVEL9K_HOME_FOLDER_ABBREVIATION=""

POWERLEVEL9K_BATTERY_ICON=$'\uF011'
POWERLEVEL9K_VCS_UNSTAGED_ICON=$'\uF09E'
POWERLEVEL9K_PYTHON_ICON=$'\uE63C'

POWERLEVEL9K_STATUS_VERBOSE=true
POWERLEVEL9K_STATUS_OK_IN_NON_VERBOSE=true
POWERLEVEL9K_OK_ICON=$'\uF00C'
POWERLEVEL9K_FAIL_ICON=$'\uF00D'
POWERLEVEL9K_LOCK_ICON=$'\uF023'
POWERLEVEL9K_VCS_GIT_GITHUB_ICON=$'\uF09B'
POWERLEVEL9K_VCS_BRANCH_ICON=$'\uE625'
POWERLEVEL9K_SHOW_CHANGESET=true

POWERLEVEL9K_LEFT_SUBSEGMENT_SEPARATOR=""
POWERLEVEL9K_RIGHT_SUBSEGMENT_SEPARATOR=""
POWERLEVEL9K_LEFT_SEGMENT_SEPARATOR=$'\uE0C6'
POWERLEVEL9K_RIGHT_SEGMENT_SEPARATOR=$'\uE0C7'
POWERLEVEL9K_WHITESPACE_BETWEEN_LEFT_SEGMENTS=" "

POWERLEVEL9K_SHORTEN_STRATEGY="truncate_from_right"
POWERLEVEL9K_SHORTEN_DIR_LENGTH=3

POWERLEVEL9K_DIR_HOME_FOREGROUND='255'
POWERLEVEL9K_DIR_HOME_SUBFOLDER_FOREGROUND='255'
POWERLEVEL9K_DIR_DEFAULT_FOREGROUND='255'

POWERLEVEL9K_CUSTOM_ETH_INFO_BACKGROUND="004"
POWERLEVEL9K_CUSTOM_ETH_INFO_FOREGROUND="255"

# Load the theme.
#antigen theme candy
antigen theme bhilburn/powerlevel9k powerlevel9k

# Bundles from the default repo (robbyrussell's oh-my-zsh).
antigen bundle sudo
antigen bundle git
antigen bundle heroku
antigen bundle pip
antigen bundle command-not-found #depends on extra/pkgfile
antigen bundle git-prompt
antigen bundle git-flow
antigen bundle pip
antigen bundle python
antigen bundle docker
antigen bundle docker-compose
antigen bundle colorize #depends on package community/pygmentize
antigen bundle systemd
antigen bundle Tarrasch/zsh-autoenv
antigen bundle t413/zsh-background-notify

antigen bundle zsh-users/zsh-syntax-highlighting
antigen bundle zsh-users/zsh-autosuggestions
antigen bundle zsh-users/zsh-completions src

# Tell antigen that you're done.
antigen apply

POWERLEVEL9K_CUSTOM_ARCHLOGO="archlinux_logo"
POWERLEVEL9K_ARCHLINUX_LOGO=$'\uF100'
function archlinux_logo(){
  echo "$(print_icon 'ARCHLINUX_LOGO')"
}

POWERLEVEL9K_CUSTOM_WIFI_SSID="custom_wifi_ssid"
function custom_wifi_ssid(){
  output=$(iw dev $CUSTOM_WIFI_SSID_IFACE_NAME link 2>/dev/null)
  if [[ ! `grep -i "not connected" <<<${output}` ]];then
    ssid=$(echo -n $output | grep SSID | awk '{print $2}')
    ip_addr=$(ip a show $CUSTOM_WIFI_SSID_IFACE_NAME | grep 'inet ' | awk '{print $2}' | head -1 | grep -oE "([0-9]+\.){3}[0-9]+")
    echo "\uF012 ${ssid}/${ip_addr}"
  else
    echo ""
  fi
}


POWERLEVEL9K_CUSTOM_ETH_INFO="custom_eth_info"
function custom_eth_info(){
  is_link_up=$(ethtool $CUSTOM_ETH_IFACE_NAME 2>/dev/null | grep "Link detected" | awk '{print $3}')
  if [[ "${is_link_up}" != "no" ]];then
    ip_addr=$(ip a show $CUSTOM_ETH_IFACE_NAME 2>/dev/null | grep 'inet ' | awk '{print $2}' | head -1 | grep -oE "([0-9]+\.){3}[0-9]+")
    echo "\uF0C1 ${CUSTOM_ETH_IFACE_NAME}/${ip_addr}"
    return
  fi
  echo ""
}


export HISTIGNORE="ls:cd:cd -:pwd:exit:date:* --help"
export LANG=en_US.UTF-8
# Customize to your needs...
export PATH=$PATH:/usr/local/bin:/usr/bin:/bin:/opt/bin:/usr/i686-pc-linux-gnu/gcc-bin/4.5.3:/usr/i686-pc-linux-gnu/x86_64-pc-linux-gnu/gcc-bin/4.5.3:/usr/games/bin:/home/daltonmatos/src/less.js/bin/:~/.local/bin


setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_SPACE
autoload -U compinit promptinit
compinit

zstyle ':completion::complete:*' use-cache 1

# Arch Linux
alias ainst='sudo pacman -S --needed'
alias asearch='pacman -Ss'
alias auinst='sudo pacman -R'
alias newvenv='mkvirtualenv -p /usr/bin/python2'
alias srv='sudo systemctl'

alias _i='ainst'
alias _u='auinst'
alias _s='asearch'
alias _u='sudo pacman -Rs'
alias _info='pacman -Qe'
alias _files='pacman -Ql'
alias _sync='sudo pacman -Syuw'
alias _upgrade='sudo pacman -Syu'

alias py='ipython'
alias dfh='df -hP | sed -e "s/Sist. Arq./Sist.Arq./" | column -t'
alias gf='git flow'

# Tmux aliases
alias tl='tmux ls'
alias ta='tmux attach -t'

alias json='python -mjson.tool'

alias randpwd='dd if=/dev/random bs=1 count=12 2>/dev/null | md5sum -'

alias prettyxml='xmllint --format - < '

alias avrasm2='wine ~/bin/AvrAssembler2/avrasm2.exe $*'
alias avrasm32='wine ~/bin/AvrAssembler/avrasm32.exe $*'

# GPG specifics
GPG_TTY=$(tty)
export GPG_TTY

# Uses gpg-agent as ssh-agent, makes it possible to have your ssh key as a GPG authentication key
# https://incenp.org/notes/2015/gnupg-for-ssh-authentication.html
# Only use gpg as a ssh-agent if we are not on a remote system
if [ -z "${SSH_TTY}" ]; then
  export SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"
fi

[[ -a ~/.shell-extras.sh ]] && . ~/.shell-extras.sh

[[ -f /usr/share/nvm/init-nvm.sh ]] && source /usr/share/nvm/init-nvm.sh

_ssx_via(){
  COMMAND=${1}
  gateway=${2}
  shift; shift
  $COMMAND -o "ProxyCommand=ssh ${gateway} -W %h:%p" -o "StrictHostKeyChecking=no" $*
}

_ssh_via(){
  _ssx_via 'ssh' $*
}

_scp_via(){
  _ssx_via 'scp' $*
}

decrypt_env() {
  local env_name_sufix=$1
  local env_name=CRYPT_${env_name_sufix}
  gpg -d <<<${(P)env_name} 2>/dev/null
}

alias ssh-via=_ssh_via
alias scp-via=_scp_via
alias myip='curl https://httpbin.org/ip'
# Env adicionada pelo vim quando abre um terminal,
# Dessa forma conseguimos abrir um terminal dentro do vim jÃ¡ caindo
# no current directory
[[ ! -z ${CHG_PWD} ]] && cd ${CHG_PWD}


export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"

if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

