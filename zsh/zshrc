# Antigen init
source $(dirname ${ZDOTDIR}/.zshrc)/antigen/antigen.zsh
# Load the oh-my-zsh's library.
antigen use oh-my-zsh


#POWERLEVEL9K_MODE='awesome-fontconfig'
POWERLEVEL9K_INSTALLATION_PATH=$ANTIGEN_BUNDLES/bhilburn/powerlevel9k

POWERLEVEL9K_PROMPT_ON_NEWLINE=true
POWERLEVEL9K_PROMPT_ADD_NEWLINE=true
POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX=""
POWERLEVEL9K_MULTILINE_SECOND_PROMPT_PREFIX="> "
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(ssh context dir_writable dir vcs virtualenv)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status battery)
POWERLEVEL9K_CONTEXT_TEMPLATE="%n"

POWERLEVEL9K_BATTERY_ICON=""

POWERLEVEL9K_LEFT_SUBSEGMENT_SEPARATOR=""
POWERLEVEL9K_RIGHT_SUBSEGMENT_SEPARATOR=""
POWERLEVEL9K_LEFT_SEGMENT_SEPARATOR=$'\uE0C6'
POWERLEVEL9K_RIGHT_SEGMENT_SEPARATOR=""
POWERLEVEL9K_WHITESPACE_BETWEEN_LEFT_SEGMENTS=" "

# Load the theme.
#antigen theme candy
antigen theme bhilburn/powerlevel9k powerlevel9k

# Bundles from the default repo (robbyrussell's oh-my-zsh).
antigen bundle sudo
antigen bundle git
antigen bundle heroku
antigen bundle pip
antigen bundle command-not-found #depends on extra/pkgfile
antigen bundle git-prompt
antigen bundle git-flow
antigen bundle pip
antigen bundle python
antigen bundle docker
antigen bundle docker-compose
antigen bundle colorize #depends on package community/pygmentize
antigen bundle systemd
antigen bundle Tarrasch/zsh-autoenv
antigen bundle t413/zsh-background-notify

antigen bundle zsh-users/zsh-syntax-highlighting
antigen bundle zsh-users/zsh-autosuggestions
antigen bundle zsh-users/zsh-completions src

# Tell antigen that you're done.
antigen apply


EDITOR=vim
export HISTIGNORE="ls:cd:cd -:pwd:exit:date:* --help"
export EDITOR
export LANG=en_US.UTF-8
# Customize to your needs...
export PATH=$PATH:/usr/local/bin:/usr/bin:/bin:/opt/bin:/usr/i686-pc-linux-gnu/gcc-bin/4.5.3:/usr/i686-pc-linux-gnu/x86_64-pc-linux-gnu/gcc-bin/4.5.3:/usr/games/bin:/home/daltonmatos/src/less.js/bin/


setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_SPACE
autoload -U compinit promptinit
compinit

zstyle ':completion::complete:*' use-cache 1

[[ -f /usr/bin/virtualenvwrapper.sh ]] && source /usr/bin/virtualenvwrapper.sh
# Debian-likes
[[ -f /usr/local/bin/virtualenvwrapper.sh ]] && source /usr/local/bin/virtualenvwrapper.sh


# Arch Linux
alias ainst='sudo pacman -S --needed'
alias asearch='pacman -Ss'
alias auinst='sudo pacman -R'
alias newvenv='mkvirtualenv -p /usr/bin/python2'
alias srv='sudo systemctl'

alias _i='ainst'
alias _u='auinst'
alias _s='asearch'
alias _u='sudo pacman -Rs'
alias _info='pacman -Qe'
alias _sync='sudo pacman -Syuw'
alias _upgrade='sudo pacman -Syu'

alias py='ipython'
alias dfh='df -hP | sed -e "s/Sist. Arq./Sist.Arq./" | column -t'
alias gf='git flow'

# Tmux aliases
alias tl='tmux ls'
alias ta='tmux attach -t'

alias json='python -mjson.tool'

alias randpwd='dd if=/dev/random bs=1 count=12 2>/dev/null | md5sum -'

alias prettyxml='xmllint --format - < '

alias avrasm2='wine ~/bin/AvrAssembler2/avrasm2.exe $*'
alias avrasm32='wine ~/bin/AvrAssembler/avrasm32.exe $*'

# GPG specifics
GPG_TTY=$(tty)
export GPG_TTY

# Uses gpg-agent as ssh-agent, makes it possible to have your ssh key as a GPG authentication key
# https://incenp.org/notes/2015/gnupg-for-ssh-authentication.html
#export SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"

[[ -a ~/.shell-extras ]] && . ~/.shell-extras

[[ -f /usr/share/nvm/init-nvm.sh ]] && source /usr/share/nvm/init-nvm.sh

PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting
